generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  email          String     @unique
  name           String
  aPassword      Boolean
  password       String?
  emailVerified  DateTime?
  avatarPublicId String?
  avatarUrl      String?
  role           String?
  accounts       Account?
  properties     Property[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String  @unique
  type              String
  provider          String
  providerAccountId String  @unique
  access_token      String?
  expires_at        Int?
  id_token          String?
  refresh_token     String?
  scope             String?
  session_state     String?
  token_type        String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Property {
  id            String          @id @default(uuid())
  userId        String
  name          String
  type          String
  floor         Int?
  rooms         Int
  sleeping      Int
  bathroom      Int
  near          String?
  address       String
  price         Decimal
  settlement    String
  country       String
  rate          Float
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  PropertyImage PropertyImage[]
}

model PropertyImage {
  id         String   @id @default(uuid())
  propertyId String
  url        String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}
